!function(){"use strict";var t=angular.module("xtForm",[]);t.directive("ngModel",["xtFormConfig","$rootScope","$interpolate","$document",function(t,r,e,n){var a="ng-untouched",i="ng-touched";return{require:["ngModel","^?xtForm","^?form"],link:function(o,l,u,s){function d(){f=p.$setTouched||g,v=h.getValidationStrategy(),p.$untouched=!0;var t=n[0].querySelectorAll('label[for="'+u.id+'"]');angular.extend(p,{$focused:!1,$label:t.length>0?t[0].innerText:"",$xtErrors:[]}),o.$watch(function(){return p.$error},m,!0),o.$on("XtForm.ForceErrorUpdate",m),l.on("focus",function(){p.$touched||f(),p.$focused=!0,m(),o.$apply()}).on("blur",function(){p.$focused=!1,m(),o.$apply()})}function c(t){var r="msg"+t[0].toUpperCase()+t.substring(1);return u[r]?u[r]:e($[t])(u)}function m(){p.$xtErrors=[],angular.forEach(p.$error,function(t,r){var e=t&&v(b,p);if(e){var n={key:r,message:c(r)};"required"===r?p.$xtErrors.push(n):p.$xtErrors.unshift(n)}}),r.$broadcast("XtForm.ErrorsUpdated",p)}function g(){p.$touched=!0,p.$untouched=!1,l.addClass(i).removeClass(a)}var f,v,$=t.getErrorMessages(),p=s[0],h=s[1],b=s[2];h&&d()}}}]),t.directive("xtForm",["$timeout",function(t){return{require:"",priority:-1,controller:"XtFormController",controllerAs:"xtForm",link:function(r,e,n,a){e.on("submit",function(){r.$apply(function(){a.submit()})}).on("reset",function(){t(function(){a.reset()})})}}}]).controller("XtFormController",["$scope","$element","$attrs","xtFormConfig","$window",function(t,r,e,n,a){function i(){return angular.isFunction(u.$setSubmitted)?void u.$setSubmitted():(u.$submitted=!0,void r.addClass("ng-submitted"))}function o(){angular.isFunction(u.$setSubmitted)||(u.$submitted=!1,r.removeClass("ng-submitted"))}var l=this,u=r.controller("form"),s=e.strategy?n.getValidationStrategy(e.strategy):n.getDefaultValidationStrategy();angular.extend(l,{form:u,getValidationStrategy:function(){return s},tooltipTrigger:e.tooltipTrigger,submit:function(){i(),u.$invalid&&e.focusError&&a.setTimeout(function(){r.find(".ng-invalid:input:visible:first").focus()}),t.$broadcast("XtForm.ForceErrorUpdate",null,"submit")},reset:function(){l.form.$setPristine(),l.form.$setUntouched(),o(),t.$broadcast("XtForm.ForceErrorUpdate",null,"reset")}})}]),t.provider("xtFormConfig",function(){var t,r=this,e={minlength:"Needs to be at least {{ngMinlength}} characters long",maxlength:"Can be no longer than {{ngMaxlength}} characters long",required:"This field is required",number:"Must be a number",min:"Must be at least {{min}}",max:"Must be no greater than {{max}}",email:"Must be a valid E-mail address",pattern:"Illegal value",url:"Must be a valid URL",date:"Must be a valid date",datetimelocal:"Must be a valid date",time:"Must be a valid time",week:"Must be a valid week",month:"Must be a valid month",$$server:"An error has occurred"};angular.extend(r,{$validationStrategies:{invalid:function(t){return t.$invalid},submitted:function(t){return t.$invalid&&t.$submitted},dirty:function(t,r){return r.$invalid&&r.$dirty},dirtyOrSubmitted:function(t,r){return r.$invalid&&(t.$submitted||r.$dirty)},focusedAndDirtyOrSubmitted:function(t,r){return r.$invalid&&r.$focused&&(r.$dirty||t.$submitted)},dirtyAndFocusedOrSubmitted:function(t,r){return r.$invalid&&(t.$submitted||r.$dirty&&r.$focused)}},addValidationStrategy:function(t,e){r.$validationStrategies[t]=e},setDefaultValidationStrategy:function(e){if(!r.$validationStrategies[e])throw new Error("Could not find validation strategy by name: "+e);t=r.$validationStrategies[e]},setErrorMessages:function(t){angular.extend(e,t)}}),this.$get=function(){return{getErrorMessages:function(){return angular.copy(e)},getValidationStrategy:function(t){if(!r.$validationStrategies[t])throw new Error("Could not find validation strategy by name: "+t);return r.$validationStrategies[t]},getDefaultValidationStrategy:function(){return t}}},r.setDefaultValidationStrategy("dirtyOrSubmitted")}),t.directive("xtValidationInline",["$templateCache",function(t){function r(){return"validation_"+e++}var e=0;return{require:["^xtForm"],restrict:"EA",scope:!0,replace:!0,template:function(r,e){return t.get(e.templateUrl||"xtForm/inline/validationInline.html")},link:function(t,e,n){function a(){e.addClass("xt-validation-inline"),n.id||(n.id=r(),e.attr("id",n.id)),u.attr("required")&&u.attr("aria-required",!0),t.$on("XtForm.ErrorsUpdated",function(t,r){(null===r||r===s)&&i()})}function i(){var r=n.multiple?s.$xtErrors.length:1;t.errors=s.$xtErrors.slice(0,r),t.showErrors=t.errors.length>0,o(t.showErrors)}function o(t){t?u.attr("aria-invalid",!0).attr("aria-describedby",n.id):(u.removeAttr("aria-invalid"),u.removeAttr("aria-describedby"))}var l=n["for"]||n.xtValidationInline;if(angular.isUndefined(l))throw new Error('The validation input id must be specified eg. for="id"');var u=angular.element(document.getElementById(l));if(0===u.length)throw new Error("Can not find input element for the validation directive");var s=u.controller("ngModel");a()}}}]),t.directive("xtValidationSummary",["$templateCache",function(t){return{require:["^xtForm","^form"],restrict:"EA",replace:!0,scope:!0,template:function(r,e){return t.get(e.templateUrl||"xtForm/summary/validationSummary.html")},link:function(t,r,e,n){function a(){t.errors=[],angular.forEach(i,function(r,n){if("$"!==n[0]){var a=e.multiple?r.$xtErrors.length:1,i=r.$xtErrors.slice(0,a);angular.forEach(i,function(e){t.errors.push({key:e.key,label:r.$label,message:e.message})})}}),t.showErrors=t.errors.length>0}var i=n[1];t.showLabel="true"===e.showLabel||angular.isUndefined(e.showLabel),t.$on("XtForm.ErrorsUpdated",a)}}}]),t.directive("xtValidationTooltip",["$compile","xtFormConfig","$interpolate",function(t,r,e){return{require:["^xtForm","^ngModel"],restrict:"EA",link:function(n,a,i,o){function l(){u(),s()}function u(){var t=i["for"]||i.xtValidationTooltip;m=t?angular.element(document.getElementById(t)):a,m.addClass("xt-validation-tooltip"),m.attr("required")&&m.attr("aria-required",!0)}function s(){var r="!"+g.form.$name+"."+m.attr("name"),e=r+".$error",o=d().map(function(t){return"("+e+"."+t.key+'?"":"'+t.message+'.  ")'}).join(" + ");a.addClass("xt-error-container"),a.attr("tooltip-placement","top"),a.attr("tooltip","{{"+o+"}}"),a.attr("tooltip-trigger","mouseenter"),a.attr("tooltip-class","xtClass"),a.attr("tooltip-enable",r+".$valid"),a.removeAttr(i.$attr.xtValidationTooltip),t(a)(n)}function d(){var t=[];return angular.forEach(i,function(r,e){var n=e;if(0===e.indexOf("ng")?n=e.substring(2):"type"===e.toLowerCase()&&(n=r.toLowerCase()),n in f){var a={key:n,message:c(n)};t.push(a)}}),t}function c(t){var r="msg"+t[0].toUpperCase()+t.substring(1);return i[r]?i[r]:e(f[t])(i)}var m,g=o[0],f=r.getErrorMessages();l()}}}])}(),angular.module("xtForm").run(["$templateCache",function(t){t.put("xtForm/inline/validationInline.html",'<div data-ng-show="showErrors">\n    <span class="xt-validation-item" data-ng-repeat="error in errors" data-key="error.key">{{error.message}}</span>\n</div>')}]),angular.module("xtForm").run(["$templateCache",function(t){t.put("xtForm/summary/validationSummary.html",'<div class="panel panel-danger" data-ng-show="showErrors">\n    <div class="panel-heading">\n        <h3 class="panel-title">\n            <span class="glyphicon glyphicon-exclamation-sign" aria-hidden="true"></span>\n            Validation errors\n        </h3>\n    </div>\n    <div class="panel-body">\n        <ul class="xt-validation-summary">\n            <li data-ng-repeat="error in errors" data-key="{{error.key}}">\n                <span data-ng-show="showLabel" data-ng-bind="error.label"></span>\n                -\n                <span data-ng-bind="error.message"></span>\n            </li>\n        </ul>\n    </div>\n</div>')}]);